<prog> -> package id $ <exec>
<exec> -> <func> <func_n>
<func> -> func id (<params>)<func_types>{ $ <body>}
<func_types> -> (int <types_n>) | (float64 <types_n>) | (string <types_n>) | eps
<types_n> -> , <type> <types_n> | eps
<type> -> int | float64 | string
<params> -> id <type> <params_n> | eps
<params_n> -> , id <type> <params_n> | eps
<func_n> -> $ <func> <func_n> | eps
<body> -> <exec> | <statements>
<statements> -> <statement> <statements>
<statements> -> <statement> | eps
<statement> -> <definition> | <assignment> | <if> | <for> | <call> | <return>
<definition> -> id := <expression>
<assignment> -> <ids> = <expressions> | <ids> = <call>
<ids> -> id <ids_n>
<ids_n> -> , id <ids_n> | eps
<expressions> -> <expression> <expression_n>
<expression_n> -> , <expression> <expression_n> | eps
<if> -> if (<expression>) { $ <statements> } else { $ <statements>}
<for> -> for (<definition> | <assignment> | eps ; <expression> ; <assignment> ) { $ <body> }
<call> -> id(<params>)
<return> -> return <expressions>


